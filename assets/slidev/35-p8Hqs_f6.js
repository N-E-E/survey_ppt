import{o as e,c as o,k as n,q as a,s as r,A as s,e as l}from"../modules/vue-CTgvBLQu.js";import{I as i}from"./default-COUHEUVX.js";import{b as _,ah as t}from"../index-BbirAL0k.js";import{p as u,u as c,f as d}from"./context-CMO-JFY-.js";import"../modules/shiki-BHubiYO5.js";const p=l("h1",null,"参数与约定",-1),m=l("p",null,"4",-1),h=l("p",null,[l("strong",null,"starling")],-1),f=l("ol",null,[l("li",null,"BeamWidth(W) = 4"),l("li",null,"threads = 8."),l("li",null,"使用了异步io，访存和计算并非完全并行"),l("li",null,"经过读取测试(读取了1b的那个数据)，服务器io速度为301.18MB/s")],-1),B=l("p",null,[l("strong",null,"CognitiveSSD")],-1),g=l("ol",null,[l("li",null,"ssd带宽BW = 500MB/s(暂定)"),l("li",null,"PageSize = 16KB"),l("li",null,"源码使用了page_search算法，搭配了缓存机制使用。是beam_search算法的改进。我们使用的仍然是diskann的beam_search算法"),l("li",null,"计算我们的模型时尽可能地使用之前说的优化技术。"),l("li",null,"并行的flash模块数量M = 4")],-1),x={__name:"35",setup(b){return u(t),c(),(k,v)=>(e(),o(i,a(r(s(d)(s(t),34))),{default:n(()=>[p,m,h,f,B,g]),_:1},16))}},z=_(x,[["__file","/@slidev/slides/35.md"]]);export{z as default};
