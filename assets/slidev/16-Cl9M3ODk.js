import{o as a,c as r,k as n,q as c,s as _,A as o,e as t,a0 as e}from"../modules/vue-CTgvBLQu.js";import{I as l}from"./default-BZkyYO3a.js";import{b as p,Q as s}from"../index-C-Asr1s0.js";import{p as d,u as i,f as u}from"./context-vFW8dPb0.js";import"../modules/shiki-BHubiYO5.js";const h=t("h1",null,"优化2：缓存、预取策略",-1),m=t("p",null,"1.5",-1),f=t("p",null,"整个工作流中有两个缓存。一是在ssd内部会有page cache。另一个是可以在FPGA DRAM中设计page cache。这里主要讨论后者",-1),x=t("p",null,"缓存机制主要起作用的仍然是round计算部分。比方说搜索路径上的两个节点，其邻居可能有覆盖，这时候就可以借助缓存机制一定量地减少round。",-1),g=t("p",null,"对于预取，单个节点搜索时功能比较大，可以预取3-hop甚至4-hop的点，充分利用ssd吞吐量。但是batch搜索时就不那么好了，吞吐量已经是瓶颈了",-1),P=t("p",null,[t("strong",null,"优点"),e("：图算法执行总时长可以减小。可以一定程度地减少访存时间。")],-1),b=t("p",null,[t("strong",null,"不足"),e("：batch搜索时由于吞吐量已经是瓶颈了，预取机制到底起多大作用存疑。")],-1),k={__name:"16",setup(v){return d(s),i(),(A,B)=>(a(),r(l,c(_(o(u)(o(s),15))),{default:n(()=>[h,m,f,x,g,P,b]),_:1},16))}},T=p(k,[["__file","/@slidev/slides/16.md"]]);export{T as default};
