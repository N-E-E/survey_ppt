import{o as l,c as r,k as o,q as n,s as a,A as s,e as t}from"./modules/vue-D_1tdyWU.js";import{I as _}from"./slidev/two-cols-DzPd229y.js";import{b as p,E as e}from"./index-C1kyXy8w.js";import{p as i,u as c,f as u}from"./slidev/context-CnKUQPZD.js";import"./modules/shiki-BLoV2MwH.js";const m="/survey_ppt/layout_common.jpg",d="/survey_ppt/graph_example.png",f=t("h1",null,"约定",-1),h=t("p",null,"1.1",-1),g=t("ol",null,[t("li",null,"存图方式: 如图(逻辑视图)。其中data部分存储该节点的全精度向量，如果要使用全精度向量来做距离计算，则是需要的。各个节点根据编号存在对应的offset位置，未经过局部性优化（当然也就产生问题：很多相邻节点分散在不同的page中。后面会优化）"),t("li",null,"各个节点的vector数据存放在host的内存中，且经过量化压缩"),t("li",null,"算法中的L、V放在FPGA DRAM中(假定空间足够)"),t("li",null,"从SSD中取得的邻居放在FPGA DRAM中(假定空间足够)，用过了且淘汰的节点就丢弃")],-1),v=t("br",null,null,-1),x=t("br",null,null,-1),P=t("p",null,[t("img",{src:m,alt:""})],-1),A=t("p",null,[t("img",{src:d,alt:""})],-1),y={__name:"4",setup(b){return i(e),c(),(k,B)=>(l(),r(_,n(a(s(u)(s(e),3))),{right:o(D=>[v,x,P,A]),default:o(()=>[f,h,g]),_:1},16))}},G=p(y,[["__file","/@slidev/slides/4.md"]]);export{G as default};
